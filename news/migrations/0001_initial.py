# Generated by Django 3.2.7 on 2025-09-09 15:23

import datetime
from django.db import migrations, models
import django.db.models.deletion
import smartfields.fields
import smartfields.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('page', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='NewsCatalog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='文章分类名称')),
                ('url', models.CharField(help_text='请谨慎，URL一旦保存不能修改', max_length=100, unique=True, verbose_name='url后缀名')),
                ('sort', models.SmallIntegerField(null=True, verbose_name='指定排序')),
                ('title', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='seo标题')),
                ('keywords', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='seo关键词')),
                ('describe', models.TextField(blank=True, null=True, verbose_name='seo描述')),
                ('is_sitemap', models.BooleanField(default=True, verbose_name='是否加入站点地图')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='添加时间')),
                ('category', models.ForeignKey(blank=True, help_text='父目录', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='news_c', to='news.newscatalog', verbose_name='父类目级别')),
            ],
            options={
                'verbose_name': '文章分类',
                'verbose_name_plural': '文章分类',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='文章标题')),
                ('url', models.CharField(help_text='请谨慎，URL一旦保存不能修改', max_length=100, unique=True, verbose_name='url后缀名')),
                ('c_url', models.CharField(max_length=100, verbose_name='上级url')),
                ('is_topping', models.BooleanField(default=False, verbose_name='是否置顶')),
                ('sort', models.SmallIntegerField(null=True, verbose_name='指定排序')),
                ('small_image', smartfields.fields.ImageField(blank=True, upload_to='news_images', verbose_name='默认图片')),
                ('source', models.CharField(blank=True, max_length=255, verbose_name='文章来源')),
                ('vurl', models.TextField(blank=True, verbose_name='视频地址')),
                ('title', models.CharField(max_length=255, unique=True, verbose_name='seo标题')),
                ('keywords', models.CharField(max_length=255, unique=True, verbose_name='seo关键词')),
                ('describe', models.TextField(blank=True, null=True, verbose_name='seo描述')),
                ('is_sitemap', models.BooleanField(default=True, verbose_name='是否加入站点地图')),
                ('summary', models.TextField(blank=True, null=True, verbose_name='内容概要')),
                ('content', models.TextField(blank=True, null=True, verbose_name='内容')),
                ('created_time', models.DateTimeField(default=datetime.datetime(2025, 9, 9, 15, 23, 36, 327049), verbose_name='发布日期')),
                ('updated_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('goods_tag', models.ManyToManyField(blank=True, to='page.GoodsTag', verbose_name='相关产品')),
                ('news_catalog', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='news.newscatalog', verbose_name='文章类别')),
                ('news_tag', models.ManyToManyField(blank=True, to='page.NewsTag', verbose_name='相关文章')),
            ],
            options={
                'verbose_name': '文章信息',
                'verbose_name_plural': '文章信息',
                'ordering': ['id'],
            },
            bases=(smartfields.models.SmartfieldsModelMixin, models.Model),
        ),
    ]
